name: Build GKI - Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4 zstd libarchive-tools ccache lld -y
          sudo aptitude install libssl-dev -y

      - name: Set swap space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Clone clang
        run: |
          mkdir clang-tc && cd clang-tc
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r536225.tar.gz
          tar -xvzf clang-r536225.tar.gz
          rm -rf clang-r536225.tar.gz
          
      - name: Clone dependencies
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "gki-android12-5.10"
          git clone https://github.com/TheWildJames/kernel_patches.git
          
      - name: Clone kernel source
        run: |
          git clone --depth 1 https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git -b xaga-s-oss build
          ls -la
          
      - name: Add KernelSU-Next
        working-directory: ./build
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
      
      - name: Applying susfs patches
        working-directory: ./build
        run: |
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android12-5.10.patch ./
          cp ../susfs4ksu/kernel_patches/fs/* ./fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./include/linux/

          cd ./KernelSU-Next
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true

          cd ..
          patch -p1 < 50_add_susfs_in_gki-android12-5.10.patch || true
          
      - name: Applying hide stuff patch / fix patch
        working-directory: ./build
        run: |
          cp ../kernel_patches/kernel_compat.c_fix.patch ./
          patch -p1 -F 3 < kernel_compat.c_fix.patch
          
          cp ../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
        
      - name: Config defconfig
        working-directory: ./build
        run: |
          echo "CONFIG_KSU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./arch/arm64/configs/gki_defconfig

      - name: Build
        working-directory: ./build
        run: |
          curl -LSs https://raw.githubusercontent.com/bachnxuan/hos_kernel_builder/master/build.sh | bash

      - name: Rename Image.gz to kernel
        working-directory: ./build
        run: mv out/arch/arm64/boot/Image.gz out/arch/arm64/boot/kernel

      - name: Upload Kernel Image
        uses: actions/upload-artifact@v4
        with:
          name: kernel
          path: ./build/out/arch/arm64/boot/kernel
